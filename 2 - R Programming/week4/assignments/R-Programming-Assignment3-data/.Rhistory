outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
outcome[, 11]
df <- read.csv("hospital-data.csv",stringsAsFactors = 0)
View(df)
View(outcome)
df <- read.csv("outcome-of-care-measures.csv",stringsAsFactors = 0)
View(df)
str(df)
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
names(df)
outcome[, 11]
df[, 17]
df[,c(11,17,23)] <- as.numeric(df[,c(11,17,23)])
sapply(df[,c(11,17,23)],as.numeric)
df[, 17]
df[,(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
df[,c(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
df[, 17]
outcome="heart attack"
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
df2 <- df[!is.na(df[,col]),]
View(df2)
df2 <- df2[order(df[,col],df$Hospital.Name),]
df2 <- df[!is.na(df[,col]),]
df3 <- df2[order(df2[,col],df$Hospital.Name),]
df3 <- df2[order(df2[,col],df2$Hospital.Name),]
View(df3)
best <- function(state, outcome) {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% df$State)) {
stop("invalid state")
}
if (!(outcome %in% c("heart attack","heart failure","pneumonia"))) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
df[,c(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
df2 <- df[!is.na(df[,col]),]
df3 <- df2[order(df2[,col],df2$Hospital.Name),]
return(df3$Hospital.Name[1])
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
subset(df,State=="TX" & Hospital.Name==""CYPRESS FAIRBANKS MEDICAL CENTER")
subset(df,State=="TX" & Hospital.Name=="CYPRESS FAIRBANKS MEDICAL CENTER")
best <- function(state, outcome) {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% df$State)) {
stop("invalid state")
}
if (!(outcome %in% c("heart attack","heart failure","pneumonia"))) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
df[,c(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
df2 <- df[!is.na(df[,col]) & df$State==state,]
df3 <- df2[order(df2[,col],df2$Hospital.Name),]
return(df3$Hospital.Name[1])
}
best <- function(state, outcome) {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% df$State)) {
stop("invalid state")
}
if (!(outcome %in% c("heart attack","heart failure","pneumonia"))) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
df[,c(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
df2 <- df[!is.na(df[,col]) & df$State==state,]
df3 <- df2[order(df2[,col],df2$Hospital.Name),]
return(df3$Hospital.Name[1])
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
is.integer(num)
is.integer(10)
as.integer(10)
is.integer(10)
?is.integer()
class(10)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% df$State)) {
stop("invalid state")
}
if (!(outcome %in% c("heart attack","heart failure","pneumonia"))) {
stop("invalid outcome")
}
## Return hospital name in that state with the given rank 30-day death rate
df[,c(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
df2 <- df[!is.na(df[,col]) & df$State==state,]
df3 <- df2[order(df2[,col],df2$Hospital.Name),]
if (num == 'best') {
return(df3$Hospital.Name[1])
} else if (num == 'worst') {
return(df3$Hospital.Name[nrow(df3)])
} else if (num%%1 == 0 & num >= 1 & num <= nrow(df3)) {
return(df3$Hospital.Name[num])
} else if (num%%1 == 0 & num > nrow(df3)) {
return(NA)
} else {
stop("invalid num value")
}
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
iris[,1]
iris[151,1]
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df[,c(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
outcome = 'heart attack'
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
df2 <- df[!is.na(df[,col]),]
df3 <- df2[order(df2$State,df2[,col],df2$Hospital.Name),]
tapply(df3[,col],df3$State,function(x) x[20])
tapply(df3$Hospital.Name,df3$State,function(x) x[20])
as.data.frame(tapply(df3$Hospital.Name,df3$State,function(x) x[20]))
test <- as.data.frame(tapply(df3$Hospital.Name,df3$State,function(x) x[20]))
test <- as.data.frame(tapply(df3$Hospital.Name,df3$State,function(x) head(x,1)))
View(test)
test$state <- row.names(test)
View(test)
View(test)
names(test)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome are valid
if (!(outcome %in% c("heart attack","heart failure","pneumonia"))) {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
df[,c(11,17,23)] <- sapply(df[,c(11,17,23)],as.numeric)
col <- ifelse(outcome=='heart attack',11,
ifelse(outcome=='heart failure',17,23)
)
df2 <- df[!is.na(df[,col]),]
df3 <- df2[order(df2$State,df2[,col],df2$Hospital.Name),]
if (num == 'best') {
df4 <- as.data.frame(tapply(df3$Hospital.Name,df3$State,function(x) head(x,1)))
} else if (num == 'worst') {
df4 <- as.data.frame(tapply(df3$Hospital.Name,df3$State,function(x) tail(x,1)))
} else if (num%%1 == 0 & num >= 1) {
df4 <- as.data.frame(tapply(df3$Hospital.Name,df3$State,function(x) x[num]))
} else {
stop("invalid num value")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
names(df4)[1] <- 'hospital'
df4$state <- row.names(df4)
return(df4)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("best.r")
source("rankhospital.r")
source("rankall.r")
source('~/Others/learning/Online Certificates/Data Science Specialization -- Coursera/2 - R Programming/week4/assignments/R-Programming-Assignment3-data/rankall.r')
source("best.r")
source("rankhospital.r")
source("rankall.r")
best("SC", "heart attack")
options(warn=-1)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
